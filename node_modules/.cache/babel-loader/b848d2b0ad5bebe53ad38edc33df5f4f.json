{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gavox\\\\react\\\\to_do_list\\\\src\\\\componentes\\\\todoList.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoRender(props) {\n  const editing = false;\n\n  while (editing === false) {\n    const lista = props.lista;\n    var deletefunction = props.deletefunction;\n    const push_render = lista.map((action, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [action, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deletefunction(lista, index),\n        children: \" Delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 84\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 59\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: push_render\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = TodoRender;\nexport default TodoRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoRender\");","map":{"version":3,"sources":["C:/Users/gavox/react/to_do_list/src/componentes/todoList.js"],"names":["React","useState","TodoRender","props","editing","lista","deletefunction","push_render","map","action","index"],"mappings":";AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,OAAO,GAAE,KAAf;;AACA,SAAOA,OAAO,KAAK,KAAnB,EAAyB;AACrB,UAAMC,KAAK,GAAEF,KAAK,CAACE,KAAnB;AACA,QAAIC,cAAc,GAAGH,KAAK,CAACG,cAA3B;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,MAAD,EAASC,KAAT,kBAAoB;AAAA,iBAAiBD,MAAjB,oBAAyB;AAAQ,QAAA,OAAO,EAAE,MAAKH,cAAc,CAACD,KAAD,EAAQK,KAAR,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA,OAASA,KAAT;AAAA;AAAA;AAAA;AAAA,YAA9B,CAApB;AAEA,wBACI;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AAGJ;;KAbQL,U;AAcT,eAAeA,UAAf","sourcesContent":["\r\nimport React, {useState} from 'react';\r\n\r\nfunction TodoRender(props) {\r\n    const editing= false;\r\n    while (editing === false){\r\n        const lista= props.lista\r\n        var deletefunction = props.deletefunction\r\n        const push_render = lista.map((action, index) =>  <li key={index}>{action} <button onClick={()=> deletefunction(lista, index)}> Delete  </button></li> );\r\n        \r\n        return (\r\n            <ul>{push_render}</ul>\r\n        ); \r\n    }\r\n   \r\n    \r\n}\r\nexport default TodoRender;"]},"metadata":{},"sourceType":"module"}
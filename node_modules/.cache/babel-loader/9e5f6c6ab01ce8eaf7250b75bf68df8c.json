{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gavox\\\\react\\\\to_do_list\\\\src\\\\componentes\\\\todoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  const lista = [];\n  const [input, setInput] = useState('');\n  const push_render = lista.map(action => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: action\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 48\n  }, this));\n\n  const handleEvent = event => {\n    event.preventDefault();\n    lista.push(input);\n    console.log(lista);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleEvent,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => {\n        setInput(event.target.value);\n      },\n      type: \"text\",\n      placeholder: \"Add to do\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      type: \"submit\",\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: push_render\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"D4u6eRDEpR0Amfq2wMT385FdAkk=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/gavox/react/to_do_list/src/componentes/todoForm.js"],"names":["React","useState","TodoForm","lista","input","setInput","push_render","map","action","handleEvent","event","preventDefault","push","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMK,WAAW,GAAGH,KAAK,CAACI,GAAN,CAAWC,MAAD,iBAAa;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAvB,CAApB;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,KAAK,CAACS,IAAN,CAAWR,KAAX;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAGH,GAND;;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEM,WAAtC;AAAA,4BAEI;AACA,MAAA,QAAQ,EAAGC,KAAK,IAAI;AAChBL,QAAAA,QAAQ,CAACK,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAR;AACH,OAHD;AAIA,MAAA,IAAI,EAAC,MAJL;AAKA,MAAA,WAAW,EAAC,WALZ;AAMA,MAAA,KAAK,EAAEZ,KANP;AAOA,MAAA,IAAI,EAAC,MAPL;AAQA,MAAA,SAAS,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAlCQJ,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction TodoForm() {\r\n    const lista = [];\r\n    const [input,setInput] = useState('');\r\n\r\n    const push_render = lista.map((action) =>  <li>{action}</li> );\r\n\r\n    const handleEvent = (event) => {\r\n        event.preventDefault();\r\n        lista.push(input)\r\n        console.log(lista)\r\n        \r\n       \r\n    }\r\n\r\n    \r\n    return (\r\n        <form className='todo-form' onSubmit={handleEvent}>\r\n            \r\n            <input\r\n            onChange= {event => {\r\n                setInput(event.target.value);\r\n            }}\r\n            type='text'\r\n            placeholder='Add to do'\r\n            value={input}\r\n            name='text'\r\n            className='todo-input'>\r\n            </input>\r\n            <button className='todo-button' type=\"submit\"> Add </button>\r\n            <ul>{push_render}</ul>\r\n\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}